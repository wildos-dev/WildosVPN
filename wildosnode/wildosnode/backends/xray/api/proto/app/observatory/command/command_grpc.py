# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: app/observatory/command/command.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import wildosnode.backends.xray.api.proto.app.observatory.config_pb2
import wildosnode.backends.xray.api.proto.app.observatory.command.command_pb2


class ObservatoryServiceBase(abc.ABC):

    @abc.abstractmethod
    async def GetOutboundStatus(self, stream: 'grpclib.server.Stream[app.observatory.command.command_pb2.GetOutboundStatusRequest, app.observatory.command.command_pb2.GetOutboundStatusResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/xray.core.app.observatory.command.ObservatoryService/GetOutboundStatus': grpclib.const.Handler(
                self.GetOutboundStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                wildosnode.backends.xray.api.proto.app.observatory.command.command_pb2.GetOutboundStatusRequest,
                wildosnode.backends.xray.api.proto.app.observatory.command.command_pb2.GetOutboundStatusResponse,
            ),
        }


class ObservatoryServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetOutboundStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/xray.core.app.observatory.command.ObservatoryService/GetOutboundStatus',
            wildosnode.backends.xray.api.proto.app.observatory.command.command_pb2.GetOutboundStatusRequest,
            wildosnode.backends.xray.api.proto.app.observatory.command.command_pb2.GetOutboundStatusResponse,
        )
